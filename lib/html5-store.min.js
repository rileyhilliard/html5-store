!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("html5-store",[],t):"object"==typeof exports?exports["html5-store"]=t():e["html5-store"]=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=1)}([function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHash=t.KEY=void 0;var r="html5-store";t.KEY=r;t.keyHash=function(e){return"".concat(r,":").concat(e)}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=i(o(2)),n=i(o(3)),a=i(o(4));function i(e){return e&&e.__esModule?e:{default:e}}var u={Local:r.default,Session:n.default,Cookie:new a.default};t.default=u,e.exports=t.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(0),n=window.localStorage,a={get:function(e){if(!e)throw new Error("We need a key to look up data from Local Storage");var t=n.getItem((0,r.keyHash)(e));return!!t&&JSON.parse(t).data},set:function(e,t){if(!e)throw new Error("We need a key to set data to Local Storage");var o={timestamp:Date.now(),data:t};return n.setItem((0,r.keyHash)(e),JSON.stringify(o))},remove:function(e){if(!e)throw new Error("We need a key to look up data from Local Storage");return n.removeItem((0,r.keyHash)(e))}};t.default=a,e.exports=t.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(0);function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var a=window.sessionStorage,i={get:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!e)throw new Error("We need a key to look up data from Session Storage");var o=a.getItem((0,r.keyHash)(e)),n=!!o&&JSON.parse(o);return!!n&&(t?n:n.data)},set:function(e,t){if(!e)throw new Error("We need a key to set data to Session Storage");if("object"!==n(t)&&"string"!=typeof t)throw new Error("We can only store JS objects or stings to Session Storage. '".concat(n(t),"' was passed in."));var o='{\n      "data": '.concat("object"===n(t)?JSON.stringify(t):t,',\n      "meta": {\n        "timestamp": ').concat(Date.now(),"\n      }\n    }");return a.setItem((0,r.keyHash)(e),o)},remove:function(e){if(!e)throw new Error("We need a key to look up data from Local Storage");return a.removeItem((0,r.keyHash)(e))}};t.default=i,e.exports=t.default},function(e,t,o){"use strict";function r(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.clear=void 0;t.clear=function(){for(var e=document.cookie.split(";"),t=0;t<e.length;t++){var o=e[t],r=o.indexOf("="),n=r>-1?o.substr(0,r):o;document.cookie="".concat(n,"=;expires=Thu, 01 Jan 1970 00:00:00 GMT")}};var n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.store={}}var t,o,n;return t=e,(o=[{key:"set",value:function(e,t,o){var r;if(!e)throw new Error("We need a key to look up data from the Cookies");if(!t)throw new Error("We need a value to store in the Cookie");o?r=new Date(o):(r=new Date).setTime(r.getTime()+5184e6);var n="".concat(e,"=").concat(t,"; expires=").concat(r.toUTCString(),"; path=/");document.cookie=n,this.store[e]=t}},{key:"get",value:function(e){if(this.store[e])return this.store[e];for(var t="".concat(e,"="),o=document.cookie.split(";"),r=0;r<o.length;r++){for(var n=o[r];" "==n.charAt(0);)n=n.substring(1,n.length);if(0==n.indexOf(t))return this.store[e]=n.substring(t.length,n.length),this.store[e]}return null}},{key:"remove",value:function(e){document.cookie="".concat(e,"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;"),delete this.store[e]}},{key:"clear",value:function(){for(var e=document.cookie.split(";"),t=0;t<e.length;t++){var o=e[t],r=o.indexOf("="),n=r>-1?o.substr(0,r):o;document.cookie="".concat(n,"=;expires=Thu, 01 Jan 1970 00:00:00 GMT")}this.store={}}}])&&r(t.prototype,o),n&&r(t,n),e}();t.default=n}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,